############################################################################
### Oh My Zsh settings & plugins
############################################################################

# Setup $PATH.
export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the oh-my-zsh theme to load
# The theme only loads while starship prompt is not installed and activated
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="bira"

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS="true"

# Ignore commands that start with spaces and duplicates.
export HISTCONTROL=ignoreboth

# Don't add certain commands to the history file.
export HISTIGNORE="&:[bf]g:c:clear:clr:history:exit:q:pwd:* --help"

# eza settings
zstyle ':omz:plugins:eza' 'dirs-first' yes
zstyle ':omz:plugins:eza' 'icons' yes

# OS specific plugins
{{- if eq .osid "darwin" "linux-ubuntu" "linux-debian" }}
# Ensure brew is loaded first on Mac, Ubuntu, Debian and Fedora (Universal Blue distros).
# Otherwise the brew-installed packages aren't available on the PATH.
plugins+=(
  brew
)
# Disable Homebrew hints
export HOMEBREW_NO_ENV_HINTS=1
{{- end }}

{{ if eq .osid "linux-ubuntu" "linux-debian" }}
plugins+=(
  ubuntu
)
{{ else if eq .osid "linux-arch" "linux-cachyos" }}
plugins+=(
  archlinux
)
{{- end }}

# Host specific plugins
{{- if eq .chezmoi.hostname "nina-desktop" "RTY-6495672069" "docker" "MacBookAir" "cachy-mini" "cachy-desktop" }}
plugins+=(
  docker
  docker-compose
)
# lazydocker alias
alias lzd='lazydocker'
{{- end }}

{{- if eq .chezmoi.hostname "MacBookAir" "RTY-6495672069" }}
plugins+=(
  kubectl
)
# add krew (kubectl plugin manager) to PATH
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
{{- end }}

# General plugins that should be loaded on every host
plugins+=(
  chezmoi
  common-aliases
  direnv
  eza
  fzf
  git
  history
  nvm
  rsync
  ssh
  systemadmin
  zsh-autosuggestions
  zsh-syntax-highlighting
  zoxide
)

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh

############################################################################
### Aliases
############################################################################

# Reload zsh (e.g. after editing .zshrc or editing plugins)
alias src='exec zsh'

# Edit .zshrc in the chezmoi source directory
alias zshrc='chezmoi edit ${ZDOTDIR:-$HOME}/.zshrc'

# Replace cat with bat
alias cat='bat'

# More eza aliases
alias l='ll'             # make alias l the same as ll (eza -gl)
alias lt='ls --tree'     # tree alias (ls is already aliased to eza)
alias lat='ls -a --tree' # tree alias including hidden folder/files

# Pipe output to fzf with 'command F' instead of 'command | fzf'
alias -g F="| fzf"

# Pipe output to ripgrep with 'command R' instead of 'command | rg'
alias -g R="| rg"

# Replace grep with ugrep
alias grep='ug'
alias egrep='ug -E'
alias fgrep='ug -F'
alias xzgrep='ug -z'
alias xzegrep='ug -zE'
alias xzfgrep='ug -zF'

# lazigit alias
alias lg='lazygit'

# Replace cd with z (zoxide)
alias cd="z"

# Zellij aliases
alias zls='zellij list-sessions'
alias zd='zellij delete-session'
alias zda='zellij delete-all-sessions'
alias zk='zellij kill-session'
alias zka='zellij kill-all-sessions'
alias zj='zellij' # creates a new session regardless of existing ones
alias zla='zellij --layout'

# Alias to load Neovim with the minimal config included in the dotfiles
alias mn='NVIM_APPNAME=minimal-nvim nvim'

# Get the error messages from journalctl
alias jctl="journalctl -p 3 -xb"

# clr+fastfetch
alias c="clr && fastfetch"

# chezmoi aliases
alias cad="chezmoi add"
alias cap="chezmoi apply"
alias ccd="echo \'chezmoi cd\' starts a sub-shell. Don\'t forget to exit when you are done.; chezmoi cd"
alias cdi="chezmoi diff"
alias ced="chezmoi edit"
alias cls="chezmoi list"
alias cra="chezmoi re-add"
alias cst="chezmoi status"
alias cup="chezmoi update"

############################################################################
### Tools initializations & settings
############################################################################

# Set preferred editor
# Use vscode when inside vscode terminal, otherwise use nvim
if [[ $TERM_PROGRAM == 'vscode' ]]; then
  export EDITOR='code --wait'
else
  export EDITOR='nvim'
fi

# Initialize Starship prompt
eval "$(starship init zsh)"

# Initialize atuin
eval "$(atuin init zsh)"

# Set fzf colors (Catppuccin Mocha)
export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1e1e2e,spinner:#f5e0dc,hl:#f38ba8 \
--color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc \
--color=marker:#b4befe,fg+:#cdd6f4,prompt:#cba6f7,hl+:#f38ba8 \
--color=selected-bg:#45475a \
--multi"

# Use bat & eza previews in fzf
show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"
export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
_fzf_comprun() {
  local command=$1
  shift
  case "$command" in
  cd) fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
  *) fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

# Function for yazi to start it with just a 'y' and cd into the directory, you're currently in, when exiting yazi
function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
  echo -e -n "\x1b[0 q" # reset cursor to terminal emulator default
}

# Zellij function to either attach/resurrect a session or create a new one, if none exists
# No session: create new session
# One session (alive or exited): attach / resurrect session
# Two or more sessions (alive or exited): select session with fzf
function za() {
  local ZJ_SESSIONS=$(zellij list-sessions -n -s)
  local NO_SESSIONS=$(echo "${ZJ_SESSIONS}" | wc -w)
  if [ "${NO_SESSIONS}" -eq 1 ]; then
    zellij attach "$ZJ_SESSIONS"
  elif [ "${NO_SESSIONS}" -ge 2 ]; then
    zellij attach "$(echo "${ZJ_SESSIONS}" | fzf)"
  else
    zellij
  fi
}

############################################################################
### Host specific settings, variables, aliases, ...
############################################################################
{{- if eq .chezmoi.hostname "nina-desktop" }}
# Init ssh-agent so vscode can forward the keys to a dev container
if [ -z "$SSH_AUTH_SOCK" ]; then
  # Check for a currently running instance of the agent
  RUNNING_AGENT="$(ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]')"
  if [ "$RUNNING_AGENT" = "0" ]; then
    # Launch a new instance of the agent
    ssh-agent -s &>$HOME/.ssh/ssh-agent
  fi
  eval $(cat $HOME/.ssh/ssh-agent) >/dev/null
  ssh-add $HOME/.ssh/id_ed25519 2>/dev/null
fi
# Init cargo / rust
source $HOME/.cargo/env
{{- end }}

{{- if eq .chezmoi.hostname "MacBookAir" }}
# iTerm2
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
# bun
[ -s "/Users/ninagrosse/.bun/_bun" ] && source "/Users/ninagrosse/.bun/_bun"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
# So lazygit can pickup the config
export XDG_CONFIG_HOME="$HOME/.config"
# To use gnu-tar from homebrew as tar
export PATH="/opt/homebrew/opt/gnu-tar/libexec/gnubin:$PATH"
{{- end }}

{{- if eq .chezmoi.hostname "RTY-6495672069" }}
# maven config
export M2_HOME=/home/linuxbrew/.linuxbrew/Cellar/maven/3.9.9
export M2=$M2_HOME/bin
export MAVEN_OPTS='-Xms256m -Xmx512m'
export PATH=$M2:$PATH
# add /snap/bin to PATH
export PATH=/snap/bin:$PATH
{{- end }}

{{- if eq .chezmoi.hostname "soniq-pi4" }}
# load bash autocompletion for pihole
autoload bashcompinit
bashcompinit
source /etc/bash_completion.d/pihole

# vpn logs
alias vpnl='tail -f /var/log/openvpn.log'
alias vpns='cat /var/log/openvpn-status.log'

# Catppuccin colors for fzf don't work here, so unset them
unset FZF_DEFAULT_OPTS
{{- end }}

{{- if eq .osid "linux-arch" "linux-cachyos" }}
# Recent installed packages
alias rip="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -200 | nl"
# paru aliases
alias parclean='paru -Sc'
alias parclr='paru -Scc'
alias parupg='paru -Syu'
alias parsu='paru -Syu --noconfirm'
alias parin='paru -S'
alias parins='paru -U'
alias pare='paru -R'
alias parem='paru -Rns'
alias parep='paru -Si'
alias pareps='paru -Ss'
alias parloc='paru -Qi'
alias parlocs='paru -Qs'
alias parlst='paru -Qe'
alias parorph='paru -Qtd'
alias parinsd='paru -S --asdeps'
alias parmir='paru -Syy'
alias parupd="paru -Sy"
{{- end }}

{{ if eq .osid "linux-ubuntu" "linux-debian" }}
# age alieas is from ubuntu plugin and aliases to 'sudo apt', but this conflicts with age encryption
unalias age
{{- end }}

[[ -f $HOME/.local.zsh ]] && source $HOME/.local.zsh

# vim:filetype=zsh
